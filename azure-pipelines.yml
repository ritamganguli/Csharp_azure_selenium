trigger:
- '*'

pool:
  name: Azure Pipelines
  vmImage: 'windows-latest'  # Specify a Windows agent image

demands:
- msbuild
- visualstudio
- vstest

jobs:
- job: BuildAndTest
  displayName: 'Build and Test'
  steps:
  - task: NuGetToolInstaller@0
    displayName: 'Use NuGet 4.4.1'
    inputs:
      versionSpec: 4.4.1

  - powershell: |
      # Write your PowerShell commands here.
      curl -v ts.lambdatest.com/health
    displayName: 'PowerShell Script'

  - task: NuGetCommand@2
    displayName: 'NuGet restore'
    inputs:
      restoreSolution: '$(Parameters.solution)'

  - powershell: |
      # Write your PowerShell commands here.
      cat lt.log
    displayName: 'Bash Script'


- job: BuildAndTestOnWindows
  displayName: 'Build and Test on Windows'
  steps:
  - task: VSBuild@1
    displayName: 'Build solution **\*.sln'
    inputs:
      solution: '$(Parameters.solution)'
      platform: '$(BuildPlatform)'
      configuration: '$(BuildConfiguration)'

  - task: VSTest@2
    displayName: 'VsTest - testAssemblies'
    inputs:
      testAssemblyVer2: '**\*ParallelSelenium*.dll'

  - task: PublishSymbols@2
    displayName: 'Publish symbols path'
    inputs:
      SearchPattern: '**\bin\**\*.pdb'
      PublishSymbols: false
    continueOnError: true

- job: CopyFilesAndPublishArtifacts
  displayName: 'Copy Files and Publish Artifacts'
  steps:
  - task: CopyFiles@2
    displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
    inputs:
      SourceFolder: '$(system.defaultworkingdirectory)'
      Contents: '**\bin\$(BuildConfiguration)\**'
      TargetFolder: '$(build.artifactstagingdirectory)'
    condition: succeededOrFailed()

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: drop'
    inputs:
      PathtoPublish: '$(build.artifactstagingdirectory)'
    condition: succeededOrFailed()
